{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000';\nconst EntradaStockService = {\n  getAll: async () => {\n    try {\n      const res = await axios.get(`${API_URL}/entradas-stock`); // Cambiado a guion para coincidir con el backend\n      return res.data;\n    } catch (err) {\n      return {\n        entradas: []\n      };\n    }\n  },\n  create: async entrada => {\n    try {\n      const res = await axios.post(`${API_URL}/entradas-stock`, entrada);\n      return res.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n};\nexport default EntradaStockService;","map":{"version":3,"names":["axios","API_URL","EntradaStockService","getAll","res","get","data","err","entradas","create","entrada","post"],"sources":["/home/elsa/Documentos/Proyecto 2025/fronend_backend_2/Inventario/frontend-react/src/services/EntradaStockService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000';\n\nconst EntradaStockService = {\n  getAll: async () => {\n    try {\n      const res = await axios.get(`${API_URL}/entradas-stock`); // Cambiado a guion para coincidir con el backend\n      return res.data;\n    } catch (err) {\n      return { entradas: [] };\n    }\n  },\n  create: async (entrada) => {\n    try {\n      const res = await axios.post(`${API_URL}/entradas-stock`, entrada);\n      return res.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n};\n\nexport default EntradaStockService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,mBAAmB,GAAG;EAC1BC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,iBAAiB,CAAC,CAAC,CAAC;MAC1D,OAAOG,GAAG,CAACE,IAAI;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAO;QAAEC,QAAQ,EAAE;MAAG,CAAC;IACzB;EACF,CAAC;EACDC,MAAM,EAAE,MAAOC,OAAO,IAAK;IACzB,IAAI;MACF,MAAMN,GAAG,GAAG,MAAMJ,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,iBAAiB,EAAES,OAAO,CAAC;MAClE,OAAON,GAAG,CAACE,IAAI;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;AACF,CAAC;AAED,eAAeL,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}